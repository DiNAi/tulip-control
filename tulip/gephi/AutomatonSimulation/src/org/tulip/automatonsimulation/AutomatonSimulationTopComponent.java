/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.tulip.automatonsimulation;

import org.openide.util.NbBundle;
import org.openide.windows.TopComponent;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(dtd = "-//org.tulip.automatonsimulation//AutomatonSimulation//EN",
autostore = false)
@TopComponent.Description(preferredID = "AutomatonSimulationTopComponent",
//iconBase="SET/PATH/TO/ICON/HERE", 
persistenceType = TopComponent.PERSISTENCE_ALWAYS)
@TopComponent.Registration(mode = "filtersmode", openAtStartup = true)
@ActionID(category = "Window", id = "org.tulip.automatonsimulation.AutomatonSimulationTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(displayName = "#CTL_AutomatonSimulationAction",
preferredID = "AutomatonSimulationTopComponent")
public final class AutomatonSimulationTopComponent extends TopComponent {

    public AutomatonSimulationTopComponent() {
        initComponents();
        setName(NbBundle.getMessage(AutomatonSimulationTopComponent.class, "CTL_AutomatonSimulationTopComponent"));
        setToolTipText(NbBundle.getMessage(AutomatonSimulationTopComponent.class, "HINT_AutomatonSimulationTopComponent"));

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        jToggleButton1 = new javax.swing.JToggleButton();

        org.openide.awt.Mnemonics.setLocalizedText(jCheckBox1, org.openide.util.NbBundle.getMessage(AutomatonSimulationTopComponent.class, "AutomatonSimulationTopComponent.jCheckBox1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jCheckBox2, org.openide.util.NbBundle.getMessage(AutomatonSimulationTopComponent.class, "AutomatonSimulationTopComponent.jCheckBox2.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jCheckBox3, org.openide.util.NbBundle.getMessage(AutomatonSimulationTopComponent.class, "AutomatonSimulationTopComponent.jCheckBox3.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(AutomatonSimulationTopComponent.class, "AutomatonSimulationTopComponent.jLabel1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jCheckBox4, org.openide.util.NbBundle.getMessage(AutomatonSimulationTopComponent.class, "AutomatonSimulationTopComponent.jCheckBox4.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jCheckBox5, org.openide.util.NbBundle.getMessage(AutomatonSimulationTopComponent.class, "AutomatonSimulationTopComponent.jCheckBox5.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jToggleButton1, org.openide.util.NbBundle.getMessage(AutomatonSimulationTopComponent.class, "AutomatonSimulationTopComponent.jToggleButton1.text")); // NOI18N
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jCheckBox2)
                    .addComponent(jCheckBox1)
                    .addComponent(jCheckBox5)
                    .addComponent(jCheckBox4)
                    .addComponent(jCheckBox3)
                    .addComponent(jToggleButton1))
                .addContainerGap(57, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToggleButton1)
                .addContainerGap(78, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
/* 
 * This thread is started or refreshed each time jButton1 is pressed.
 * It sets up the graph and toggles threads to configure the view.
 * When 'stop' is set to 'true', this thread signals all subthreads to exit
 * and then exits itself.
 */
public class jButton1ActionRunnable implements Runnable
{
    /* 
     * Fields
     */
    public volatile boolean stop = false;
    
    boolean box1 = false;
    boolean box2 = false;
    boolean box3 = false;
    boolean box4 = false;
    boolean box5 = false;
    
    AutSimRunnable as;
    
    // Thread thread0;
    Thread thread1;
    Thread thread2;
    Thread thread3;
    Thread thread4;
    Thread thread5;
    
    /* 
     * Constructor
     */
    jButton1ActionRunnable(boolean box1, boolean box2, boolean box3,
                           boolean box4, boolean box5)
    {
        this.box1 = box1;
        this.box2 = box2;
        this.box3 = box3;
        this.box4 = box4;
        this.box5 = box5;
        
        as = new AutSimRunnable();
        
        // thread0 = new Thread(as);
        thread1 = new Thread(as);
        thread2 = new Thread(as);
        thread3 = new Thread(as);
        thread4 = new Thread(as);
        thread5 = new Thread(as);
    }
    
    @Override
    public void run()
    {
        try
        {
            int delay = 1000;

            if (box1)
            {
                as.action = 1;
                thread1.start();
                Thread.sleep(delay);
            }
            if (box2)
            {
                as.action = 2;
                thread2.start();
                Thread.sleep(delay);
            }
            if (box3)
            {
                as.action = 3;
                thread3.start();
                Thread.sleep(delay);
            }
            if (box4)
            {
                as.action = 4;
                thread4.start();
                Thread.sleep(delay);
            }
            if (box5)
            {
                as.action = 5;
                thread5.start();
                Thread.sleep(delay);
            }
            
            while (!stop) {}
            as.stop = true;
            
            // thread0.join();
            thread1.join();
            thread2.join();
            thread3.join();
            thread4.join();
            thread5.join();
        }
        catch (InterruptedException e) {}
    }
}

/*
 * This thread performs the method indexed by 'action,' which should be set
 * before starting the thread. (Note that changes to 'action' after starting 
 * the thread do not affect any currently running threads.) After the thread
 * has started, stop it by setting 'stop' to 'true.'
 */
public class AutSimRunnable extends AutomatonSimulationImpl implements Runnable
{
    public volatile int action;
    
    @Override
    public void run()
    {
        switch(action)
        {
            case(0): deleteGraph(); break;
            case(1): setupGraph(); break;
            case(2): startStreaming(); break;
            case(3): viewActiveAutomata(); break;
            case(4): rankNodes(); break;
            case(5): layoutGraph(); break;
        }
    }
}

jButton1ActionRunnable actionRunnable;
Thread actionThread;

private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
    if (jToggleButton1.isSelected())
    {
        jToggleButton1.setText("Stop");
        
        // Read current checkbox states.
        actionRunnable = new jButton1ActionRunnable(jCheckBox1.isSelected(),
                                                    jCheckBox2.isSelected(),
                                                    jCheckBox3.isSelected(),
                                                    jCheckBox4.isSelected(),
                                                    jCheckBox5.isSelected());

        // Start thread.
        actionThread = new Thread(actionRunnable);
        actionThread.setDaemon(true);
        actionThread.start();
    }
    else
    {
        jToggleButton1.setText("Start");
        
        // Stop any currently running threads.
        try
        {
            if (actionRunnable != null && actionThread != null)
            {
                actionRunnable.stop = true;
                actionThread.join();
            }
        }
        catch (InterruptedException e) {}
    }
}//GEN-LAST:event_jToggleButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JToggleButton jToggleButton1;
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        jCheckBox1.setSelected(true);
        jCheckBox2.setSelected(true);
        jCheckBox3.setSelected(true);
        jCheckBox4.setSelected(true);
        jCheckBox5.setSelected(true);
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
}
